local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RainbowGui"
screenGui.Parent = game.CoreGui

-- Rainbow Effekt Funktion
local function getRainbowColor()
    local time = tick()
    return Color3.fromHSV(time % 5 / 5, 1, 1)
end

-- Hauptmenü (standardmäßig unsichtbar)
local mainMenu = Instance.new("Frame")
mainMenu.Size = UDim2.new(0, 200, 0, 150)
mainMenu.Position = UDim2.new(1, -210, 1, -210)
mainMenu.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
mainMenu.Visible = false
mainMenu.Parent = screenGui

local function createRainbowBackground(frame)
    game:GetService("RunService").Heartbeat:Connect(function()
        frame.BackgroundColor3 = getRainbowColor()
    end)
end

createRainbowBackground(mainMenu)

-- Toggle Status Anzeige
local function updateToggleStatus(button, isActive)
    button.Text = isActive and button.Text .. " (ON)" or button.Text:gsub(" %(ON%)", "")
end

-- Menü Button (unten rechts)
local menuButton = Instance.new("TextButton")
menuButton.Size = UDim2.new(0, 50, 0, 50)
menuButton.Position = UDim2.new(1, -60, 1, -60)
menuButton.Text = "≡"
menuButton.TextSize = 24
menuButton.TextColor3 = Color3.fromRGB(255, 255, 255)
menuButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
menuButton.Font = Enum.Font.SourceSans
menuButton.Parent = screenGui

menuButton.MouseButton1Click:Connect(function()
    mainMenu.Visible = not mainMenu.Visible
end)

-- Noclip Button
local noclip = false
local noclipButton = Instance.new("TextButton")
noclipButton.Size = UDim2.new(1, -10, 0, 40)
noclipButton.Position = UDim2.new(0, 5, 0, 10)
noclipButton.Text = "Toggle Noclip"
noclipButton.TextSize = 18
noclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
noclipButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
noclipButton.Font = Enum.Font.SourceSans
noclipButton.Parent = mainMenu

noclipButton.MouseButton1Click:Connect(function()
    noclip = not noclip
    updateToggleStatus(noclipButton, noclip)

    if noclip then
        local player = game.Players.LocalPlayer
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = humanoid.WalkSpeed * 2
            end
        end
    else
        local player = game.Players.LocalPlayer
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = humanoid.WalkSpeed / 2
            end
        end
    end
end)

-- Delete Modus
local deleteMode = false
local deletedObjects = {}
local deleteButton = Instance.new("TextButton")
deleteButton.Size = UDim2.new(1, -10, 0, 40)
deleteButton.Position = UDim2.new(0, 5, 0, 60)
deleteButton.Text = "Toggle Delete Mode"
deleteButton.TextSize = 18
deleteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
deleteButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
deleteButton.Font = Enum.Font.SourceSans
deleteButton.Parent = mainMenu

deleteButton.MouseButton1Click:Connect(function()
    deleteMode = not deleteMode
    updateToggleStatus(deleteButton, deleteMode)

    if not deleteMode then
        for _, obj in ipairs(deletedObjects) do
            if obj and obj.Parent == nil then
                obj.Parent = game.Workspace
            end
        end
        deletedObjects = {}
    end
end)

-- Löschen-Funktion
local function deleteObject(object)
    if deleteMode and object then
        table.insert(deletedObjects, object)
        object.Parent = nil
    end
end

-- Mouse-Click-Handling
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if deleteMode and input.UserInputType == Enum.UserInputType.MouseButton1 then
        local player = game.Players.LocalPlayer
        local mouse = player:GetMouse()
        deleteObject(mouse.Target)
    end
end)

-- Rainbow Effekt für Buttons
createRainbowBackground(noclipButton)
createRainbowBackground(deleteButton)
createRainbowBackground(menuButton)
